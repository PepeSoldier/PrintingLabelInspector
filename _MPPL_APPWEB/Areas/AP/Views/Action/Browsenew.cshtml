@using MDL_AP.Models.ActionPlan;
@using XLIB_COMMON.Model;
@using GridMvc.Html

@model _MPPL_WEB_START.Areas.AP.ViewModel.ActionBrowsenewViewModel

@{
    ViewBag.Title = "Przeglądanie Akcji";
}

@*Filters*@
<div class="row">
    <div class="col-lg-12">
        <div class="formArea shadow">
            @using (Html.BeginForm("A", "B", FormMethod.Post, new { @id = "BrowseFilterForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.FilterObject.AssignedId);
                @Html.HiddenFor(model => model.FilterObject.CreatorId);

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.DropDownList("TypeId", Model.Types, "", new { @class = "form-control" })
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.Label("Tworzący", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.Editor("CreatorIdTb", new { htmlAttributes = new { @class = "form-control", @Value = Model.FilterObject.CreatorFullName } })
                    </div>
                </div>

                <div class="formInlineGroup ">
                    <div class="formInlineRow">
                        @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.DropDownList("DepartmentId", Model.Departments, "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.Label("Odpowiedzialny", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.Editor("AssignedIdTb", new { htmlAttributes = new { @class = "form-control", @Value = Model.FilterObject.AssignedFullName } })
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.Label("Filtr Daty", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow" style="max-width: 200px;">
                        <div style="width:50%; float:left;">
                            @Html.TextBoxFor(model => model.FilterObject.EndDateFrom, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker", @placeholder = "Data od" })
                        </div>
                        <div style="width:50%; float:left;">
                            @Html.EditorFor(model => model.FilterObject.EndDateTo, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "Data do" } })
                        </div>
                    </div>
                </div>


                <div class="formInlineGroup ">
                    <div class="formInlineRow">
                        @Html.Label("Pokaż podakcje", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @if (Model.FilterObject.ShowChildActions)
                        {
                            @Html.CheckBoxFor(model => model.FilterObject.ShowChildActions, new { @class = "form-control", @checked = "checked" })
                        }
                        else
                        {
                            @Html.CheckBoxFor(model => model.FilterObject.ShowChildActions, new { @class = "form-control" })
                        }
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        <span></span>
                    </div>
                    <div class="formInlineRow">
                        <div class="col-md-offset-2 col-md-10">
                            <div id="BrowseFilterFormSubmit" class="btn btn-default"><span>Odśwież</span></div>
                        </div>
                    </div>
                </div>
            }
            <div style="clear: both"></div>
        </div>
    </div>
</div>

@{
    string class1 = string.Empty;
}

<div class="row" style="margin-top: 15px;">
    <div class="col-sm-12 col-md-12 col-lg-3 browseGrid" style="max-width: 300px;">
        <div>
            @using (Html.BeginForm("A", "B", FormMethod.Post, new { @id = "BrowseFilter2Form" }))
            {

                <div class="form-group">
                    <div class="formInlineRow2 formInlineRowLabel2">
                        @Html.Label("Obszar", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow2">
                        @Html.DropDownList("AreaId", Model.Areas, "", new { @class = "form-control", @onchange = "FillLine()" })
                    </div>
                </div>
                <div class="form-group ">
                    <div class="formInlineRow2 formInlineRowLabel2">
                        @Html.Label("Linia", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow2">
                        @Html.DropDownList("LineId", Model.Lines, "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group ">
                    <div class="formInlineRow2 formInlineRowLabel2">
                        @Html.Label("Stanowisko", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow2">
                        @Html.DropDownList("WorkstationId", Model.Workstations, "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group ">
                    <div class="formInlineRow2 formInlineRowLabel2">
                        @Html.Label("Zmiana", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow2">
                        @Html.DropDownList("ShiftCodeId", Model.ShiftCodes, "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group ">
                    <div class="formInlineRow2 formInlineRowLabel2">
                        @Html.Label("Kategoria", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow2">
                        @Html.DropDownList("CategoryId", Model.Categories, "", new { @class = "form-control" })
                    </div>
                </div>
            }
            <div class="StatusCheckBoxes browseCheckbox">

                @foreach (ActionState as1 in Model.ActionStates)
                {
                    <div class="formInlineRow">
                        <input id="@("cbStatus_" + as1.Id)" type="checkbox" @(as1.Selected ? "checked='checked'" : string.Empty) class="cbActionStatus" />
                        <label for="@("cbStatus_" + as1.Id)" class="form-control">@(as1.Name)  <span id="cbStatusVal_@as1.Id"> @as1.Count.ToString()</span></label>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-9 browseGrid" id="grid1">
        @*GRID HERE*@
    </div>
</div>



<script type="text/javascript">

    var gridBrowse;

    $(document).ready(
        function () {
            InitDatepickers();
            InitAutocompetes("#AssignedIdTb", "#AssignedId");
            InitAutocompetes("#CreatorIdTb", "#CreatorId");
            gridBrowse = new GridBrowse("#grid1");
            gridBrowse.InitLoad();
        });

    $(document).on('click', ".gridpaginer li", function () {
        var page = $(this).first('a').text();
        gridBrowse.ChangePage(page);
    });

    $(document).on('click', "#BrowseFilterFormSubmit", function () {
        gridBrowse.Refresh();
    });

    $(document).on('click', ".subactionsShow", function () {
        new ActionBrowse().ShowHideChildrenActions(this);
    });

    $(".cbActionStatus").change(function () {
        gridBrowse.Refresh();
    });

    function FillLine() {
        FillComboLineAndWorkst("#AreaId", "#LineId", "#WorkstationId");
    }

</script>
