@using MDL_ONEPROD.Model.Scheduling
@using GridMvc.Html
@model _MPPL_WEB_START.Areas.ONEPROD.Base.ViewModels.ToolViewModel

@{
    ViewBag.Title = "Narzędzia";
}

<div id="configMenu">
    @{ Html.RenderAction("Index", "Configuration"); }
</div>

<div class="row">
    <div class="col-md-6">
        <div class="formArea shadow">
            @using (Html.BeginForm("ToolAdd", "Configuration", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.LabelFor(m => m.NewObject.Name, new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.TextBoxFor(m => m.NewObject.Name, new { @class = "form-control" })
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                    </div>
                    <div class="formInlineRow">
                        <input type="submit" class="btn btn-default" value="Dodaj Narzędzie" />
                    </div>
                </div>
            }
            <div class="clearBothDiv"></div>
        </div>
        
    </div>
    <div class="col-md-6">
        <div class="formArea shadow">
            @using (Html.BeginForm("ToolGroupAdd", "Configuration", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.Label("Nazwa Grupy", new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.TextBox("Name","", new { @class = "form-control" })
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                    </div>
                    <div class="formInlineRow">
                        <input type="submit" class="btn btn-default" value="Dodaj Grupę" />
                    </div>
                </div>
            }
            <div class="clearBothDiv"></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        @Html.Grid((IEnumerable<Tool>)Model.Tools).Columns(columns =>
        {
            columns.Add().Titled("Nr").Encoded(false).Sanitized(false).SetWidth(45).RenderValueAs(dd => @<span>@dd.Id</span>);
            columns.Add(dd => dd.Name).Titled("Nazwa").SetWidth(250).Editable(true);
                        
            columns.Add().Titled("Grupa").Encoded(false).Sanitized(false).SetWidth(250).RenderValueAs(dd => 
                @<span>
                    @Html.Label((dd.ToolGroupId != null)? dd.ToolGroup.Name : "-", new { @class = "control-label display-mode" })
                    @Html.DropDownList("ToolGroupId", new SelectList(Model.ToolGroups, "Id", "Name", dd.ToolGroupId), "", new { @class = "form-control edit-mode" })
                </span>
                );

            columns.Add(dd => dd.NM_Connected).Titled("Połączony").SetWidth(100).Editable(false);
            columns.Add(dd => dd.NM_ItemGroupsCount).Titled("Kategorie").SetWidth(50).Editable(false);
            columns.Add(dd => dd.Id).Titled("Edycja").EditActionColumn("", "ToolUpdate", "ToolDelete");
        }).WithPaging(50)
    </div>
    <div class="col-md-6">
        @Html.Grid(Model.ToolGroups).Columns(columns =>
        {
            columns.Add(dd => dd.Name).Titled("Nazwa Grupy").SetWidth(250).Editable(true);
            //columns.Add(dd => dd.ParentTool.Name).Titled("Parent Tool").SetWidth(180).Editable(false);
            //columns.Add(dd => dd.ToolId).Titled("Connected ToolId").SetWidth(40).Editable(true);
            //columns.Add(dd => dd.Tool).Titled("Connected Tool").SetWidth(180).Editable(false);
            columns.Add(dd => dd.Id).EditActionColumn("", "/Configuration/ToolGroupUpdate", "/Configuration/ToolGroupDelete");
        }).WithPaging(50)
    </div>
</div>


<script type="text/javascript">
    InitEditableGrid();
</script>
