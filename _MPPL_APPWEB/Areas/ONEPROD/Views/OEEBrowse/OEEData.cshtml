@model MDL_ONEPROD.ComponentOEE.ViewModels.FilterOeeViewModel
@using XLIB_COMMON.Enums;
@using MDL_ONEPROD.Model.Scheduling;
@{
    ViewBag.Title = "OEE DATA";
    List<ResourceOP> rs = new List<ResourceOP>();
    rs.Add(new ResourceOP { Id = -1, Name = "-" });
    rs.Add(new ResourceOP { Id = 0, Name = "PROD." });
    rs.Add(new ResourceOP { Id = 1, Name = "POST." });
    SelectList types = new SelectList(rs, "Id", "Name", 0);
}
<style>
    .WindowBox {
        border: 0 !important;
    }

    .shadow, .grid-mvc, .darkSkin .Window, .darkSkin .WindowJs, .defaultSkin .Window, .defaultSkin .WindowJs {
        -webkit-box-shadow: none !important;
        -moz-box-shadow: none !important;
        box-shadow: none !important;
    }
</style>

<div class="row justify-content-center h-100 no-gutters flex-column">
    <div class="col-12">
        <div class="h-100 d-flex flex-column">
            <div class="row no-gutters">
                <div class="row">
                    <div class="col-12">
                        @*PASEK FILTROW*@
                        <div class="formArea shadow">
                            <div class="formInlineGroup">
                                <div class="formInlineRow">
                                    <label>Wybierz Maszynę</label>
                                </div>
                                <div class="formInlineRow">
                                    @HtmlMppl.DropDownOneprodManyMachines("MachineId", ((List<ResourceOP>)Model.MachineList), "Id", "Name", "ResourceGroupOP.Name", 1)
                                </div>
                            </div>
                            <div class="formInlineGroup hidden" id="ReasonSelector">
                                <div class="formInlineRow">
                                    <label>Wybierz Powód</label>
                                </div>
                                <div class="formInlineRow">
                                    <select id="ReasonId" class="form-control" style="width: 210px;">
                                        <option value="-1"></option>
                                    </select>
                                </div>
                            </div>
                            <div class="formInlineGroup">
                                <div class="formInlineRow">
                                    <label>Wybierz Tryb</label>
                                </div>
                                <div class="formInlineRow">
                                    <div class="btn-group btn-group-toggle" data-toggle="buttons" id="modeSwitcher">
                                        <label class="option option1 btn btn-default">
                                            <input type="radio" name="options" id="option1" autocomplete="off" checked> Od - Do
                                        </label>
                                        <label class="option option2 btn btn-default active">
                                            <input type="radio" name="options" id="option2" autocomplete="off"> Tydzień
                                        </label>
                                        <label class="option option3 btn btn-default">
                                            <input type="radio" name="options" id="option3" autocomplete="off"> Zmiana
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="formInlineGroup groupoption1 hidden">
                                <div class="formInlineRow">
                                    <label>Wybierz Datę Od</label>
                                </div>
                                <div class="formInlineRow">
                                    @Html.TextBox("SelectedDateFrom", System.DateTime.Now.Date.AddHours(-18), "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @autocomplete = "off" })
                                </div>
                            </div>
                            <div class="formInlineGroup groupoption1 hidden">
                                <div class="formInlineRow">
                                    <label>Wybierz Datę Do</label>
                                </div>
                                <div class="formInlineRow">
                                    @Html.TextBox("SelectedDateTo", System.DateTime.Now.Date.AddHours(6), "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @autocomplete = "off" })
                                </div>
                            </div>


                            <div class="formInlineGroup groupoption3 hidden">
                                <div class="formInlineRow">
                                    <label>Wybierz Datę</label>
                                </div>
                                <div class="formInlineRow">
                                    @Html.TextBox("SelectedDate", System.DateTime.Now, "{0:yyyy-MM-dd}", new { @class = "form-control datetimepicker2", @autocomplete = "off" })
                                </div>
                            </div>
                            <div class="formInlineGroup groupoption3 hidden">
                                <div class="formInlineRow">
                                    <label>Wybierz Zmianę</label>
                                </div>
                                <div class="formInlineRow">
                                    @Html.DropDownList("SelectedShift", EnumHelper.GetSelectList(typeof(Shift)), null, new { @class = "form-control", @value = 1 })
                                </div>
                            </div>
                            <div class="formInlineGroup groupoption2 ">
                                <div class="formInlineRow">
                                    <label>Wybierz tydzień</label>
                                </div>
                                <div class="formInlineRow">
                                    <div class="align-items-center" id="example1"></div>
                                </div>
                            </div>
                            <div class="formInlineGroup">
                                <div class="formInlineRow">
                                    <label>Wybierz Brygadę</label>
                                </div>
                                <div class="formInlineRow">
                                    @Html.DropDownList("LabourBrigadeId", (SelectList)Model.LabourBrigades, null, new { @class = "form-control selectpicker", multiple = "" })
                                </div>
                            </div>
                            <div class="formInlineGroup">
                                <div class="formInlineRow">
                                    <label>Typ</label>
                                </div>
                                <div class="formInlineRow">
                                    @Html.DropDownList("Type", (SelectList)types, null, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="formInlineGroup">
                                <div class="formInlineRow">
                                </div>
                                <div class="formInlineRow">
                                    <input type="button" class="btn btn-success" value="Start" id="btnRefresh" />
                                </div>
                            </div>
                            <div style="clear: both;"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row justify-content-center h-100 mh-100 flex-grow-1 mt-2 mb-0 no-gutters" style="overflow: auto;">
                <div class="col-12" id="oeeDataGrid">
                    Loading...
                </div>

            </div>

            <div class="row mt-1 no-gutters" style="overflow: hidden;font-weight: 700;font-size: 22px;">
                <div class="col-12" id="summaryField"></div>
            </div>

        </div>
    </div>
</div>


<script src="~/_ClientAppJS/MyScripts.js"></script>
<script src="~/Areas/ONEPROD/Views/OEEBrowse/OEEDataGrid.js"></script>
<script type="text/javascript">

    var oeeDataGrid = null;

    $(document).ready(function () {
        console.log("Hello World");
        InitDatepickers();
        weekpicker1.Init();
        oeeDataGrid = new OEEDataGrid("#oeeDataGrid");
        oeeDataGrid.InitGrid();
        // setCountedValue();
    });

    var weekpicker1 = new WeekPicker("#example1", "weekPicker");
    var filters = { dateFrom: '2019-01-01 6:00', dateTo: '2019-01-01 14:00', machineIds: [], labourBrigadeIds: [], intervalInHours: 24 };
    $("#modeSwitcher").on("click", ".btn", function () {
        var Id = $(this).find("input")[0].id;
        ShowOptionGroup(Id);
    });

    $("#btnRefresh").click(function () {
        ReadManyFilters();
        oeeDataGrid.RefreshGrid(filters);
        //$.ajax({
        //    type: "GET",
        //    traditional: true,
        //    url: "/ONEPROD/OEEDashboard/ComparedResults",
        //    data: filters,
        //    success: function (data) {
        //        $("#contentBox").html(data);
        //    }
        //});
    });

    function ReadManyFilters(startDay) {
        console.log("Reading header Filters");
        var option = $("#modeSwitcher").find(".btn.active").find("input").attr("id");

        var machineIds = [];
        var selectMachines = $('#MachineId')[0].selectedOptions;
        $.each(selectMachines, function (index, value) {
            machineIds.push(parseInt(value.value));
        })

        var labBrigadeIds = [];
        var selectLabBrigades = $("#LabourBrigadeId")[0].selectedOptions;
        $.each(selectLabBrigades, function (index, value) {
            labBrigadeIds.push(parseInt(value.value));
        })

        filters.machineIds = machineIds;
        filters.intervalInHours = $("#intervalInHours").val();
        filters.reasonId = $("#ReasonId").val();
        filters.languageId = $("#LanguageId").val();
        filters.labourBrigadeIds = labBrigadeIds;
        filters.Type = $("#Type").val();

        if (option == "option2") {
            console.log("option2 - week picker");
            if (startDay == null) {
                //parameter coming from resourceGroup model. e.g: press liness has start day Saturday
                if ($("#MachineId")[0].selectedOptions.length > 0) {
                    startDay = $("#MachineId")[0].selectedOptions[0].attributes["data-startDay"].value;
                } else {
                    startDay = 1
                }
            }
            var startDayShift = (8 - startDay >= 7) ? 0 : 8 - startDay;
            var dateFrom = weekpicker1.getWeekStartDate().subtract(startDayShift, "days");
            var dateTo = weekpicker1.getWeekEndDate().subtract(startDayShift, "days");
            var dateShiftEnd = CalcEndShiftTime();

            dateTo = (dateTo > dateShiftEnd) ? dateShiftEnd : dateTo;
            filters.dateFrom = dateFrom.format('YYYY-MM-DD HH:mm');
            filters.dateTo = dateTo.format('YYYY-MM-DD HH:mm');
        }
        else if (option == "option1") {
            console.log("option1 - date picker");
            filters.dateFrom = $("#SelectedDateFrom").val();
            filters.dateTo = $("#SelectedDateTo").val()
        }
        else {
            console.log("option3 - shift picker");
            var whp = new WorkingHoursPreview("#SelectedDate", "#SelectedShift");
            var hours = whp.CalculateStartAndEndDate();
            filters.dateFrom = hours.dateFrom;
            filters.dateTo = hours.dateTo;
            filters.intervalInHours = 8;
        }

        console.log(filters);
        filters.entryType = -1;
        return filters;
    }
    function CalcEndShiftTime() {
        var today = new Date();
        var hour = today.getHours();
        today.setHours(hour + 2);
        hour = today.getHours();
        var shiftEndHour = hour < 8 ? 6 : hour < 16 ? 14 : 22;

        today.setSeconds(0); today.setMinutes(0); today.setMilliseconds(0);
        today.setHours(shiftEndHour - 8);
        return new moment(today);
    }
    function ShowOptionGroup(Id) {
        var options = ["option1", "option2", "option3"];

        for (i = 0; i < options.length; i++) {
            $(".group" + options[i]).addClass("hidden");
        }
        for (i = 0; i < options.length; i++) {
            if (options[i] == Id) {
                $(".group" + options[i]).removeClass("hidden");
            }
        }
    }
    $(".datetimepicker2").datetimepicker({
        i18n: {
            pl: {
                months: [
                    'Styczeń', 'Luty', 'Marzec', 'Kwiecień',
                    'Maj', 'Czerwiec', 'Lipiec', 'Sierpień',
                    'Wrzesień', 'Październik', 'Listopad', 'Grudzień',
                ],
                dayOfWeek: [
                    "Nd", "Pn", "Wt", "Śr", "Cz",
                    "Pt", "Sb",
                ]
            }
        },
        dayOfWeekStart: 1,
        timepicker: false,
        allowTimes: ['06:00', '14:00', '22:00'],
        format: 'Y-m-d',
        onGenerate: function (current_time, $input) {

            $(this).find(".xdsoft_date").each(function (index) {
                var month = parseInt($(this).attr('data-month')) + 1;
                var day = parseInt($(this).attr('data-date'));
                var monthStr = month > 9 ? month.toString() : "0" + month;
                var dayStr = day > 9 ? day.toString() : "0" + day;
                var thisDate = $(this).attr('data-year') + "-" + monthStr + "-" + dayStr;


                //var report = reports.find(x => x.date == thisDate);

                //if (moment(thisDate) < moment()) {
                //    if (report != null && report.shifts.length > 0) {
                //        if (report.shifts.length == 3)
                //            $(this).css("background-color", "#a9dba0");
                //        else
                //            $(this).css("background-color", "#eae498");
                //    }
                //    else {
                //        $(this).css("background-color", "rgb(237,208,208)");
                //    }
                //}
            });
        }
    });
</script>