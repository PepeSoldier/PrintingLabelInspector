@using MDL_ONEPROD.Model.Scheduling
@using _MPPL_WEB_START.Areas.ONEPROD.APS.ViewModels
@using _MPPL_WEB_START.Areas.ONEPROD.ViewModels.APS
@using GridMvc.Html

@model _MPPL_WEB_START.Areas.ONEPROD.APS.ViewModels.GantChartViewModel
@{
    ViewBag.Title = "Gantt Chart";
}
@*FORM*@
<div class="row" style="margin-bottom: 5px;">
    <div class="col-md-12">
        <div class="formArea shadow">
            <div style="float: left;">
                @using (Html.BeginForm("GanttChart", "APS", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="formInlineGroup">
                        <div class="formInlineRow">
                            @Html.LabelFor(m => m.SelectedDateFrom, new { @class = "control-label" })
                        </div>
                        <div class="formInlineRow">
                            @Html.TextBoxFor(m => m.SelectedDateFrom, "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker" })
                        </div>
                    </div>

                    <div class="formInlineGroup">
                        <div class="formInlineRow">
                            @Html.LabelFor(m => m.SelectedDateTo, new { @class = "control-label", @value = Model.SelectedDateFrom })
                        </div>
                        <div class="formInlineRow">
                            @Html.TextBoxFor(m => m.SelectedDateTo, "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @value = Model.SelectedDateTo })
                        </div>
                    </div>

                    <div class="formInlineGroup">
                        <div class="formInlineRow">
                            @Html.Label("Zoom [pixels/min]", new { @class = "control-label" })
                        </div>
                        <div class="formInlineRow">
                            @Html.TextBoxFor(m => m.Zoom, new { @class = "form-control", @value = Model.Zoom })
                        </div>
                    </div>

                    @*{int i = 0;}
                foreach (Area area in Model.Areas)
                {
                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.LabelFor(m => area.Name, new { @class = "control-label"})
                    </div>
                    <div class="formInlineRow">
                        @Html.CheckBox("ResourceGroupId_" + area.Id, false, new { @class = "form-control cbArea" })
                    </div>
                </div>
                    i++;
                }*@

                    <div class="formInlineGroup">
                        <div class="formInlineRow"></div>
                        <div class="formInlineRow">
                            @*<input type="submit" class="btn btn-default" value="Start" />*@
                            <div class="btn btn-default" id="btnRefreshGantt">Start</div>
                        </div>
                    </div>
                }
            </div>
            <div style="float: left; margin-left: 15px; margin-top: 25px;">
                <div id="btnRefreshAuto" class="btn btn-primary" onclick="RefreshGanttThread()">Auto -8h+16h</div>
            </div>
            <div style="float: left; margin-left: 15px; margin-top: 25px;">
                <div id="btnManualMode" class="btn btn-primary" onclick="ManualMode()">Tryb Ręczny</div>
            </div>

            @*<div style="float: left; margin-left: 15px; margin-top: 25px;">
                <div id="btnTest" class="btn btn-primary" onclick="Test1()">Test</div>
            </div>*@

            <div style="float: right; margin-left: 15px; overflow: hidden;"></div>
            <div class="clearBothDiv"></div>
        </div>
    </div>
</div>

<oneprod-aps-ganttchart data-refreshbtnid='btnRefreshGantt'></oneprod-aps-ganttchart>


@section Scripts{
    @*<script src="~/Areas/ONEPROD/Views/APS/GanttChartItem.js"></script>
    <script src="~/Areas/ONEPROD/Views/APS/GanttChartBatch.js"></script>
    <script src="~/Areas/ONEPROD/Views/APS/GanttChartTimer.js"></script>
    <script src="~/Areas/ONEPROD/Views/APS/GanttChartResourceRow.js"></script>*@
    <script type="text/javascript">
        //InitDateTimePickers();
        var chart;
        var ui1;
        var dateFrom;
        var dateTo;

        $(document).ready(function () {
            dateFrom = $("#SelectedDateFrom").val();
            dateTo = $("#SelectedDateTo").val();
            console.log(dateFrom);
            chart = new Chart(dateFrom);
            //chart.doDroppable(".resourceArea_16", ".workorderArea_16");
            //chart.doDroppable(".resourceArea_17", ".workorderArea_17");
            //chart.doDroppable(".resourceArea_18", ".workorderArea_18");
            ////chart.doDroppable(".resourceArea_4", ".workorderArea_4");
            ////chart.doDroppable(".resourceArea_5", ".workorderArea_5");
            ////chart.workorderContextMenu(".sgcRowWorkorder", ".sgcBlockWorkorder");
            //chart.initSA($(".resourceArea_3").find(".draggableWorkorder"));
            $("#menu").menu();
            //$(".sgcWorkordersCol").hScroll(100);
        });


        $(document).on("dblclick", ".sgcBlockWorkorder", function () {
            chart.findBestPlace($(this).attr('workorderId'), dateFrom);
        });
        $(document).keypress(function (event) {
            if (event.which == 13) {
                event.preventDefault();
                chart.stepSA();
            }
        });
        //$(".draggableWorkorder").draggable({
        //    snap: ".sgcRowSnappable",
        //    snapMode: "inner",
        //    stop: function (event, ui) {
        //    }
        //});

        

        function ManualMode() {
            console.log("ManualMode");
            chart.doDroppable(".resourceArea_16", ".workorderArea_16");
            chart.doDroppable(".resourceArea_17", ".workorderArea_17");
            chart.doDroppable(".resourceArea_18", ".workorderArea_18");

            //$(".draggableWorkorder").draggable({
            //    snap: ".sgcRowSnappable",
            //    snapMode: "inner",
            //    stop: function (event, ui) {
            //    }
            //});

            $(".draggableWorkorder").draggable({
                snap: ".sgcRowSnappable",
                snapMode: "inner",
                stop: function (event, ui) {
                }
            });
        }

        function Test1() {
            console.log("czy test dziala?");

            document.querySelector('oneprod-aps-ganttchart-item.sgcBlockSelected').Test()
        }

        //function loadWorkorder(dateFrom, dateTo, resourceId) {
        //    $.ajax({
        //        url: BaseUrl + "APS/GetWorkorders",
        //        type: 'POST',
        //        data: '{dateFrom: "' + dateFrom + '",dateTo: "' + dateTo + '", resourceId: ' + resourceId + '}',
        //        contentType: 'application/json; charset=utf-8',
        //        success: function (result) {

        //            for (var k = 0; k < result.length; k++) {
        //                $.ajax({
        //                    url: BaseUrl + "APS/GantChartWorkorder_JS",
        //                    type: 'POST',
        //                    data: '{ id: ' + result[k].Id + ', dateFrom: "' + dateFrom + '"}', //'{vm: ' + result[k] + '}',
        //                    contentType: 'application/json; charset=utf-8',
        //                    success: function (data) {
        //                        //console.log(data);
        //                        $("#resource_" + resourceId).append(data);
        //                    }
        //                });
        //            }
        //        }
        //    });
        //}
        var refreshIntervalId = 0;
        function RefreshGanttThread() {
            $("btnRefreshGantt").click();
            console.log("refreshIntervalId: " + refreshIntervalId);
            if (refreshIntervalId = 0) {
                //clearInterval(refreshIntervalId);
                var refreshIntervalId = setInterval(function () {
                    $("btnRefreshGantt").click();
                }, 150000);
            }
        }
        //function RefreshGantt() {
        //    var t = new Date();
        //    var hours8 = 8 * 60 * 60 * 1000;
        //    var from = new Date(t.getTime() - hours8);
        //    var to = new Date(t.getTime() + hours8 * 2);
        //    var zoom = $("#Zoom").val();
        //    console.log(formatDate(t));
        //    console.log(formatDate(from));
        //    console.log(formatDate(to));

        //    $("#btnRefreshAuto").toggleClass("btn-primary");
        //    $("#btnRefreshAuto").toggleClass("btn-danger");

        //    $.ajax({
        //        url: "/ONEPROD/APS/GanttChart",
        //        type: 'POST',
        //        data: "{SelectedDateFrom: '" + formatDate(from) + "', SelectedDateTo: '" + formatDate(to) + "', Zoom: " + zoom + "}",
        //        contentType: 'application/json; charset=utf-8',
        //        success: function (result) {
        //            //console.log(result);
        //            console.log("ajax success");
        //            $("#GantChart").html($($.parseHTML(result)).find("#GantChart").html());
        //            $("#btnRefreshAuto").toggleClass("btn-primary");
        //            $("#btnRefreshAuto").toggleClass("btn-danger");
        //            $(".sgcWorkordersCol").hScroll(100);
        //        }
        //    });
        //}
        //function formatDate(date) {
        //    return date.getFullYear() + '-' + formatTwoDigits(date.getMonth() + 1) + '-' + formatTwoDigits(date.getDate()) + ' ' + date.getHours() + ':00:00';
        //}
        //function formatTwoDigits(numer) {
        //    return (100 + numer).toString().substring(1, 3);
        //}

    </script>
}