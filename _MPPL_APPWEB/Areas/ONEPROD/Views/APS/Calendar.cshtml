@using MDL_ONEPROD.Model.Scheduling;
@using MDLX_MASTERDATA.Entities;
@using GridMvc.Html

@model _MPPL_WEB_START.Areas.ONEPROD.APS.ViewModels.CalendarViewModel

@{
    ViewBag.Title = "Calendar";
}

<div class="row">
    <div class="col-md-12">
        <div class="formArea shadow">
            @using (Html.BeginForm("Calendar", "APS", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })


                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.LabelFor(m => m.Month, new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.DropDownListFor(m => m.Month, new SelectList(Model.Months, "Id", "Name", Model.Month), "", new { @class = "form-control" })
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                        @Html.LabelFor(m => m.MachineId, new { @class = "control-label" })
                    </div>
                    <div class="formInlineRow">
                        @Html.DropDownListFor(m => m.MachineId, new SelectList(Model.Machines, "Id", "Name", Model.MachineId), new { @class = "form-control" })
                    </div>
                </div>

                <div class="formInlineGroup">
                    <div class="formInlineRow">
                    </div>
                    <div class="formInlineRow">
                        <input type="submit" class="btn btn-default" value="Pokaż" />
                    </div>
                </div>
            }
            <div class="clearBothDiv"></div>
        </div>

    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @*CALENDAR*@
        <div class="col-md-6 formArea" style="max-width: 400px;">
            <h3>@Model.Months[Model.Month - 1].Name</h3>
            <div>
                @{
                    DateTime Date1 = new DateTime(Model.Year, Model.Month, 1);
                    DateTime Date2 = Date1;
                    int fd = (int)Date1.DayOfWeek;
                    Date1 = Date1.AddDays(fd * -1);
                    string classChanged = "calendarDayChanged";
                    string classDay = "calendarDay";
                }

                @for (int i = 0; i < 7; i++)
                {
                    <div class="row">
                        <div style="float: left; width: 5px;"></div>
                        @if (i == 0)
                        {
                            for (int j = 0; j < 7; j++)
                            {
                                if (j < 5)
                                {
                                    <div class="calendarBox" style="background-color: rgb(47, 47, 47); color: white; font-size: 18px;">@Model.Days[j]</div>
                                }
                                else
                                {
                                    <div class="calendarBox" style="background-color: rgb(128, 13, 13); color: white; font-size: 18px;">@Model.Days[j]</div>
                                }

                            }
                        }
                        else
                        {
                            for (int j = 0; j < 7; j++)
                            {
                                {
                                    classDay = "ncalendarDay";
                                    classChanged = "";
                                    Date1 = Date1.AddDays(1);

                                    if (Date1.Date.Month == Model.Month)
                                    {
                                        classDay = "calendarDay calendarBoxSelectable";
                                    }

                                    if (Model.Calendar != null)
                                    {
                                        if (Model.Calendar.Count(c => c.DateClose.Date == Date1.Date) > 0)
                                        {
                                            classChanged = "calendarDayChanged";
                                        }
                                    }
                                }

                                <div class="calendarBox @classDay @classChanged" data-id="@Date1.Date.ToShortDateString()">
                                    @Date1.Date.Day
                                </div>

                            }
                        }
                    </div>
                }
            </div>
        </div>

        @*HOURS*@
        <div class="col-md-6 formArea" style="max-width: 550px;" id="calendarHours">

        </div>
    </div>
</div>

@section Scripts{
    <style>
        .calendarBox {
            float: left;
            height: 40px;
            width: 40px;
            /*border: 1px solid rgb(225, 225, 225);*/
            margin: 2px;
            padding: 4px;
            color: #267329;
            background: -moz-linear-gradient(top, rgba(242,246,248,1) 0%, rgba(216,225,231,0.76) 27%, rgba(181,198,208,0.51) 54%, rgba(224,239,249,0.12) 98%, rgba(224,239,249,0.1) 100%);
            background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(242,246,248,1)), color-stop(27%, rgba(216,225,231,0.76)), color-stop(54%, rgba(181,198,208,0.51)), color-stop(98%, rgba(224,239,249,0.12)), color-stop(100%, rgba(224,239,249,0.1)));
            background: -webkit-linear-gradient(top, rgba(242,246,248,1) 0%, rgba(216,225,231,0.76) 27%, rgba(181,198,208,0.51) 54%, rgba(224,239,249,0.12) 98%, rgba(224,239,249,0.1) 100%);
            background: -o-linear-gradient(top, rgba(242,246,248,1) 0%, rgba(216,225,231,0.76) 27%, rgba(181,198,208,0.51) 54%, rgba(224,239,249,0.12) 98%, rgba(224,239,249,0.1) 100%);
            background: -ms-linear-gradient(top, rgba(242,246,248,1) 0%, rgba(216,225,231,0.76) 27%, rgba(181,198,208,0.51) 54%, rgba(224,239,249,0.12) 98%, rgba(224,239,249,0.1) 100%);
            background: linear-gradient(to bottom, rgba(242,246,248,1) 0%, rgba(216,225,231,0.76) 27%, rgba(181,198,208,0.51) 54%, rgba(224,239,249,0.12) 98%, rgba(224,239,249,0.1) 100%);
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f6f8', endColorstr='#e0eff9', GradientType=0 );
        }

        .calendarBoxSelectable:hover {
            border: 2px solid rgb(0, 148, 255) !important;
        }

        .calendarHour {
            background-color: rgb(75, 202, 39);
        }

        .calendarHourClosed {
            background-color: red !important;
        }

        .ncalendarHour {
            border: 1px solid rgb(152, 204, 137);
            background-color: rgb(152, 204, 137);
        }

        .ncalendarHourClosed {
            border: 1px solid rgb(243, 206, 206);
            background-color: rgb(243, 206, 206);
        }

        .calendarDay {
            background-color: rgb(75, 202, 39);
        }

        .ncalendarDay {
            background-color: lightgray;
        }

        .calendarDayChanged {
            background-color: yellow;
        }
    </style>

    <script type="text/javascript">

        var BaseUrl = $('#BaseUrl').attr('href') + 'ONEPROD/';
        //InitDateTimePickers();

        $('.calendarDay').click(function () {
            var posting = $.post(BaseUrl + 'APS/CalendarHour', { SelectedMachineId: GetSelectedMachine(), SelectedDate: $(this).attr('data-id') });
            posting.done(function (data) {
                $("#calendarHours").empty().append(data);
            });
        });

        function ClickCalendarHour(data1) {
            $.ajax({
                url: BaseUrl + 'APS/CalendarHourUpdate',
                data: '{ SelectedMachineId: ' + GetSelectedMachine() + ', SelectedHour:"' + data1 + '"}',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log("elo");
                }
            });
        }

        function GetSelectedMachine() {
            return $('#MachineId').find('option:selected').val();
        }

        $(document).on("click", ".calendarHour", function (e) {
            ClickCalendarHour($(this).attr('data-id'));
            $(this).removeClass('calendarHour');
            $(this).addClass('calendarHourClosed');
        });
        $(document).on("click", ".calendarHourClosed", function (e) {
            ClickCalendarHour($(this).attr('data-id'));
            $(this).removeClass('calendarHourClosed');
            $(this).addClass('calendarHour');
        });

        $(document).on("click", ".calendarShift", function (e) {
            var elements = $(this).parent().parent().find(".calendarHourCol").children();

            for (i = 0; i < elements.length; i++) {
                console.log($(elements[i]).attr('data-id'));
                ClickCalendarHour($(elements[i]).attr('data-id'));

                if ($(elements[i]).hasClass("calendarHour")) {
                    $(elements[i]).removeClass('calendarHour');
                    $(elements[i]).addClass('calendarHourClosed');
                }
                else if ($(elements[i]).hasClass("calendarHourClosed")) {
                    $(elements[i]).removeClass('calendarHourClosed');
                    $(elements[i]).addClass('calendarHour');
                }
                else if ($(elements[i]).hasClass("ncalendarHour")) {
                    $(elements[i]).removeClass('ncalendarHour');
                    $(elements[i]).addClass('ncalendarHourClosed');
                }
                else if ($(elements[i]).hasClass("ncalendarHourClosed")) {
                    $(elements[i]).removeClass('ncalendarHourClosed');
                    $(elements[i]).addClass('ncalendarHour');
                }
            }
        });


    </script>
}