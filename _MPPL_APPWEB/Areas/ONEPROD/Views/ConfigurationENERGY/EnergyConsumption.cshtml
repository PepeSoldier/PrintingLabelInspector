@model MDL_ONEPROD.ComponentOEE.ViewModels.FilterOeeViewModel
@using XLIB_COMMON.Enums;
@using MDL_ONEPROD.Model.Scheduling;
@{
    ViewBag.Title = "Energy Consumption";
}

<style>
    #resourceGrid input[type=checkbox], input[type=radio] {
        height: 25px;
        width: 25px;
    }

    .WindowBox {
        border: 0 !important;
    }

    .shadow, .grid-mvc, .darkSkin .Window, .darkSkin .WindowJs, .defaultSkin .Window, .defaultSkin .WindowJs {
        -webkit-box-shadow: none !important;
        -moz-box-shadow: none !important;
        box-shadow: none !important;
    }

    .bootstrap-datetimepicker-widget table td.cw {
        color: #007bff;
    }

    .weekpickerArrow {
        float: left;
    }

    .WindowBox {
        border: 0 !important;
    }

    .shadow, .grid-mvc, .darkSkin .Window, .darkSkin .WindowJs, .defaultSkin .Window, .defaultSkin .WindowJs {
        -webkit-box-shadow: none !important;
        -moz-box-shadow: none !important;
        box-shadow: none !important;
    }
</style>

<div id="configMenu">
    @{ Html.RenderAction("Index"); }
</div>
@* TUTAJ MAMY WKLEJONY TEKST - POCZĄTEK*@

<div class="row">
    <div class="col-12">
        <div class="formArea shadow">
            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label>Wybierz Maszynę</label>
                </div>
                <div class="formInlineRow">
                    @HtmlMppl.DropDownOneprodMachines("MachineId", ((List<ResourceOP>)Model.MachineList), "Id", "Name", "ResourceGroupOP.Name", 1)
                </div>
            </div>

            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label>Wybierz Tryb</label>
                </div>
                <div class="formInlineRow">
                    <div class="btn-group btn-group-toggle" data-toggle="buttons" id="modeSwitcher">
                        <label class="option option1 btn btn-default">
                            <input type="radio" name="options" id="option1" autocomplete="off" checked> Od - Do
                        </label>
                        <label class="option option2 btn btn-default active">
                            <input type="radio" name="options" id="option2" autocomplete="off"> Tydzień
                        </label>
                        <label class="option option3 btn btn-default">
                            <input type="radio" name="options" id="option3" autocomplete="off"> Zmiana
                        </label>
                    </div>
                </div>
            </div>
            <div class="formInlineGroup groupoption1 hidden">
                <div class="formInlineRow">
                    <label>Wybierz Datę Od</label>
                </div>
                <div class="formInlineRow">
                    @Html.TextBox("SelectedDateFrom", System.DateTime.Now.Date.AddHours(-18), "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @autocomplete = "off" })
                </div>
            </div>
            <div class="formInlineGroup groupoption1 hidden">
                <div class="formInlineRow">
                    <label>Wybierz Datę Do</label>
                </div>
                <div class="formInlineRow">
                    @Html.TextBox("SelectedDateTo", System.DateTime.Now.Date.AddHours(6), "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @autocomplete = "off" })
                </div>
            </div>


            <div class="formInlineGroup groupoption3 hidden">
                <div class="formInlineRow">
                    <label>Wybierz Datę</label>
                </div>
                <div class="formInlineRow">
                    @Html.TextBox("SelectedDate", System.DateTime.Now, "{0:yyyy-MM-dd}", new { @class = "form-control datetimepicker2", @autocomplete = "off" })
                </div>
            </div>
            <div class="formInlineGroup groupoption3 hidden">
                <div class="formInlineRow">
                    <label>Wybierz Zmianę</label>
                </div>
                <div class="formInlineRow">
                    @Html.DropDownList("SelectedShift", EnumHelper.GetSelectList(typeof(Shift)), null, new { @class = "form-control", @value = 1 })
                </div>
            </div>
            <div class="formInlineGroup groupoption2 ">
                <div class="formInlineRow">
                    <label>Wybierz tydzień</label>
                </div>
                <div class="formInlineRow">
                    <div class="align-items-center" id="example1"></div>
                </div>
            </div>
            <div class="formInlineGroup groupoption1 groupoption2">
                <div class="formInlineRow">
                    <label>Wybierz interwał</label>
                </div>
                <div class="formInlineRow">
                    <select id="intervalInHours" class="form-control">
                        <option id="optionShift" value="8">Zmianowo</option>
                        <option id="optionDay" value="24" selected>Dziennie</option>
                        <option id="optionWeek" value="168">Tygodniowo</option>
                        <option id="optionMonth" value="744">Miesięcznie</option>
                    </select>
                </div>
            </div>
            <div class="formInlineGroup">
                <div class="formInlineRow">
                </div>
                <div class="formInlineRow">
                    <input type="button" class="btn btn-success" value="Start" id="btnRefresh" />
                </div>
            </div>

            <div class="formInlineGroup" style="margin-left: 15px;">
                <div class="formInlineRow">
                </div>
                <div class="formInlineRow">
                    <div id="btnShare" class="btn btn-default" style="font-weight:100 !important;">
                        <i class="fas fa-share-alt"></i>
                    </div>
                </div>
            </div>
            <div class="formInlineGroup" style="float: right;">
                <div class="formInlineRow">
                </div>
                <div class="formInlineRow">
                    <div class="row">
                        <div class="col-12">
                            <div id="getDataFromDb" class="btn btn-default btn-lg">GetTheData</div>
                        </div>
                    </div>
                </div>
            </div>
            <div style="clear: both;"></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div id="contentBox" style="min-width:1800px;"></div>
    </div>
</div>


@* A TUTAJ MAMY KONIEC TEKSTU*@


<div class="row">
    <div class="col-12">
        <div id="contentBox" style="min-width:1800px;"></div>
    </div>
</div>
<script src="~/_ClientAppJS/MyScripts.js"></script>
<script src="~/_ClientAppJS/ExternalLibraries/ChartJS/Chart.js"></script>
<script src="~/_ClientAppJS/ExternalLibraries/Gauge/raphael-2.1.4.min.js"></script>
<script src="~/_ClientAppJS/ExternalLibraries/Gauge/justgage.js"></script>
<script src="~/_ClientAppJS/ExternalLibraries/ChartJS/chartjs-plugin-datalabels.min.js"></script>
<script type="text/javascript">
    $("#getDataFromDb").on("click", function () {
        var woJson = new JsonHelper().GetPostData("/ONEPROD/Energy/CheckAndImportNewDataFromCSV", {});
        //woJson.done(function (data) {
        //    if (data == true) {
        //        new Alert().Show("success", "Operacja zakończona powodzeniem");
        //    }
        //    else {
        //        new Alert().Show("danger", "Operacja nie powiodła się");
        //    }
        //});
    });
        $(document).ready(function () {
            InitDatepickers();
            weekpicker1.Init();
            SelectActiveMenuLink(@Html.Raw(Json.Encode(ViewContext.RouteData.Values["action"])));
        });
        var weekpicker1 = new WeekPicker("#example1", "weekPicker");
        var filters = { dateFrom: '2019-01-01 6:00', dateTo: '2019-01-01 14:00', machineId: 0, intervalInHours: 24 };
        var reports = [
       { date: "2018-10-31", shifts: [1, 2, 3] },
       { date: "2018-11-02", shifts: [2, 3] },
       { date: "2018-11-03", shifts: [1] },
       { date: "2018-11-05", shifts: [1, 2, 3] },
       { date: "2018-11-06", shifts: [1, 2, 3] }
        ]
        $("#modeSwitcher").on("click", ".btn", function () {
            var Id = $(this).find("input")[0].id;
            ShowOptionGroup(Id);
        });

        $("#btnRefresh").click(function () {
            RefreshBrowse();
        });

        function RefreshBrowse() {
            $("#contentBox").html(ShowLoadingSnippet());
            ReadFilters();
            $.get("/ONEPROD/ConfigurationENERGY/EnergyDetails", filters, function (data) {
                $("#contentBox").html(data);
            });
        }

        function CalcEndShiftTime() {
            var today = new Date();
            var hour = today.getHours();
            today.setHours(hour + 2);
            hour = today.getHours();
            var shiftEndHour = hour < 8 ? 6 : hour < 16 ? 14 : 22;

            today.setSeconds(0); today.setMinutes(0); today.setMilliseconds(0);
            today.setHours(shiftEndHour - 8);
            return new moment(today);
        };

        function ShowOptionGroup(Id) {
            var options = ["option1", "option2", "option3"];

            for (i = 0; i < options.length; i++) {
                $(".group" + options[i]).addClass("hidden");
            }
            for (i = 0; i < options.length; i++) {
                if (options[i] == Id) {
                    $(".group" + options[i]).removeClass("hidden");
                }
            }
        };

        function ReadFilters(startDay) {
            var option = $("#modeSwitcher").find(".btn.active").find("input").attr("id");

            filters.machineId = $("#MachineId").val();
            filters.intervalInHours = $("#intervalInHours").val();

            if (option == "option2") {
                console.log("option2 - week picker");
                if (startDay == null) {
                    //parameter coming from resourceGroup model. e.g: press liness has start day Saturday
                    startDay = $("#MachineId")[0].selectedOptions[0].attributes["data-startDay"].value;
                }
                var startDayShift = (8 - startDay >= 7) ? 0 : 8 - startDay;
                var dateFrom = weekpicker1.getWeekStartDate().subtract(startDayShift, "days");
                var dateTo = weekpicker1.getWeekEndDate().subtract(startDayShift, "days");
                var dateShiftEnd = CalcEndShiftTime();

                dateTo = (dateTo > dateShiftEnd) ? dateShiftEnd : dateTo;
                filters.dateFrom = dateFrom.format('YYYY-MM-DD HH:mm');
                filters.dateTo = dateTo.format('YYYY-MM-DD HH:mm');
            }
            else if (option == "option1") {
                console.log("option1 - date picker");
                filters.dateFrom = $("#SelectedDateFrom").val();
                filters.dateTo = $("#SelectedDateTo").val()
            }
            else {
                console.log("option3 - shift picker");
                var whp = new WorkingHoursPreview("#SelectedDate", "#SelectedShift");
                var hours = whp.CalculateStartAndEndDate();
                filters.dateFrom = hours.dateFrom;
                filters.dateTo = hours.dateTo;
                filters.intervalInHours = 8;
            }

            console.log(filters);
            filters.reasonTypeId = null;
            filters.EntryType = -1;
        };

            $(".datetimepicker2").datetimepicker({
                i18n: {
                    pl: {
                        months: [
                            'Styczeń', 'Luty', 'Marzec', 'Kwiecień',
                            'Maj', 'Czerwiec', 'Lipiec', 'Sierpień',
                            'Wrzesień', 'Październik', 'Listopad', 'Grudzień',
                        ],
                        dayOfWeek: [
                            "Nd", "Pn", "Wt", "Śr", "Cz",
                            "Pt", "Sb",
                        ]
                    }
                },
                dayOfWeekStart: 1,
                timepicker: false,
                allowTimes: ['06:00', '14:00', '22:00'],
                format: 'Y-m-d',
            });
            $(".datetimepicker").datetimepicker({
                allowTimes: ['00:00', '06:00', '14:00', '22:00']
            });

</script>
