@using MDL_ONEPROD.Model.OEEProd;

@{
    Layout = null;
    ViewBag.Title = "EnergyDetails";
}
<style>
    .mt15 {
        margin-top: 10px;
    }

    .SectionBox {
        min-width: 650px;
    }

    .box1 {
        background: #f7f7f7;
        border: 0px solid gray;
        padding: 5px;
    }

    .detailBox {
        margin-top: 4px;
        height: 25px;
        padding: 0px;
    }

    .detailBoxTitle {
        position: relative;
        top: 5px;
        left: 5px;
        font-size: 8px;
        color: #920000;
    }

    .detailBoxValue {
        position: relative;
        top: -12px;
        right: 5px;
        font-size: 16px;
        font-weight: bold;
        color: #888888;
        text-align: right;
    }

    .titleColor {
        color: #21b191;
    }

    .chartTitle {
        width: 100%;
        padding: 15px 5px;
        text-align: center;
        font-weight: bold;
    }

    .chartComment {
        float: left;
        width: 20%;
        padding: 15px 5px;
        text-align: center;
        font-weight: bold;
    }

    .chart {
        margin: auto;
    }

    .clearPaddingL {
        padding-left: 5px;
    }

    .clearPaddingR {
        padding-right: 5px;
    }
</style>


@*EnergyDetails*@
<section id="EnergyDetails" class="SectionBox">
    <div class="row mt15">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 clearPaddingR">
            <div class="shadow WindowBox">
                <div class="chartTitle chartTitleOEE">Zużycie Energii</div>
                <div style="height:450px; width: 885px;" id="energyChart" class="chart" data-dataset="3"></div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">
    $(document).ready(function () {
        console.log("EnergyDetails.ready");
        RefreshChart();
    });
   
    function RefreshChart() {
        chartEnergyData = new JsonHelper().GetPostData("/ONEPROD/ConfigurationENERGY/GetChartEnergyConsumption", filters);
        chartEnergyData.done(function (chartData) {
            var chart = RefreshChartData(chartData, "energyChart", paretoOptions);
            chart.options.scales.yAxes[0].scaleLabel.labelString = "szt";
        });
    }

    // Skrypt do wrzucenia do osobnego pliku

    function RefreshChartData(data, elementId, options) {

        $('#' + elementId).html("");
        $('#' + elementId).empty();
        $('#' + elementId).append('<canvas id="Canvas' + elementId + '"></canvas>');

        var dataSet = [];

        var productionResults = data.datasets[0];   
        var gasResults = data.datasets[1];
        var electricityResults = data.datasets[2];
        var waterResults = data.datasets[3];
        
        dataSet.push(productionResults);
        dataSet.push(gasResults);
        dataSet.push(electricityResults);
        dataSet.push(waterResults);
        AssignLabelsToDataSet(dataSet);
       
        var myChart = new Chart('Canvas' + elementId, {
            title: data.title,
            type: 'bar',
            responsive: true,
            data: {
                labels: data.labels,
                datasets: dataSet,
            },
            options: options,
            plugins: [{
                beforeInit: function (chart) {
                    chart.data.labels.forEach(function (e, i, a) {
                        if (!Array.isArray(e) && a.length < 15) {
                            e = e.replace(' ', '\n');
                            e = e.replace(' ', '\n');
                            e = e.replace(' ', '\n');
                            e = e.replace(' ', '\n');
                            if (/\n/.test(e)) {
                                a[i] = e.split(/\n/);
                            }
                        }
                    });
                }
            }]
        });
        return myChart;
    }

    var paretoOptions = {
        stacked: true,
        scales: {
            yAxes: [{
                type: 'linear',
                display: true,
                position: 'left',
                id: 'y-axis-1',
                ticks: {
                    beginAtZero: true,
                },
                scaleLabel: {
                    display: true,
                    labelString: 'min'
                }
            }, {
                type: 'linear',
                display: true,
                position: 'right',
                id: 'y-axis-2',
                ticks: {
                    beginAtZero: true
                },
                gridLines: {
                    drawOnChartArea: false, // only want the grid lines for one axis to show up
                },
                scaleLabel: {
                    display: true,
                    labelString: '%'
                }
            }],
            xAxes: [{ ticks: { autoSkip: false } }],
        },
        legend: { display: true },
        tooltips: {
            mode: 'index',
            intersect: false,
            callbacks: {
                title: function (tooltipItems, data) {
                    return '';
                },
                label: function (tooltipItem, data) {
                    return data.datasets[tooltipItem.datasetIndex].label + ": " +
                        tooltipItem.yLabel.toFixed(2).replace('.00', '') +
                        data.datasets[tooltipItem.datasetIndex].displayUnit;
                }
            }
        }
    };
    var LabelsLineRound = {
        anchor: 'center',
        align: 'center',
        padding: 3,
        borderRadius: 8,
        color: function (context) {
            console.log("TYPEK");
            console.log(context.dataset.fontColor);
            return context.dataset.fontColor;
        },
        backgroundColor: function (context) {
            console.log("TYPEK 2");
            console.log(context.dataset.pointBackgroundColor);
            return context.dataset.pointBackgroundColor;
        },
        display: function (context) {
            var value = context.dataset.data[context.dataIndex];
            return value > 0;
        },
        font: function (context) {
            return {
                weight: 'bold',
                size: context.dataset.fontSize
            }
        },
        formatter: Math.round
    };
    function AssignLabelsToDataSet(data) {
        for (i = 0; i < data.length; i++) {         
            if (data[i].datalabels == "LabelsLineRound") {
                data[i].datalabels = LabelsLineRound;
            }
        }
    }

</script>