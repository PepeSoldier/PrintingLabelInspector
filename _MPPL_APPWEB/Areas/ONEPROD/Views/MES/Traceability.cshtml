@model MDL_ONEPROD.ComponentMes.ViewModels.FilterProductionLogViewModel
@using XLIB_COMMON.Enums;
@using MDL_ONEPROD.Model.Scheduling;
@{
    ViewBag.Title = "Traceability";
}
<style>
    .node-name{
        text-align:center;
        font-style:normal;
        font-size:larger;
        background-color:aquamarine;
    }
    .node-title{

    }
    .node-desc{

    }
    .node-podLogId{

    }
    .node-workOrderTotalQty{

    }
    .jsgrid-cell.textBold {
        font-weight: bold;
    }
    .jsgrid-row .jsgrid-cell.textWhiteBold,
    .jsgrid-edit-row .jsgrid-cell.textWhiteBold,
    .jsgrid-alt-row .jsgrid-cell.textWhiteBold {
        font-weight: bold;
        text-align: center;
        font-size: 16px;
        padding: 0 0;
    }

    .jsgrid-cell.textBlue {
        color: #43a1bd;
    }

    .jsgrid-cell.textGreen {
        color: #50bd96;
    }

    .jsgrid-cell.textDark {
        color: #254854;
    }
    .jsgrid-cell.textPink {
        color: hotpink;
    }
</style>

<div class="row">
    <div class="col-12 pb-3">
        <div class="formArea shadow">
            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz Maszynę</label>
                </div>
                <div class="formInlineRow">
                    @HtmlMppl.DropDownOneprodManyMachines("MachineId", ((List<ResourceOP>)Model.MachineList), "Id", "Name", "ResourceGroupOP.Name", 0)
                </div>
            </div>

            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz Tryb</label>
                </div>
                <div class="formInlineRow">
                    <div class="btn-group btn-group-toggle" data-toggle="buttons" id="modeSwitcher">
                        <label class="option option1 btn btn-default">
                            <input type="radio" name="options" id="option1" autocomplete="off" checked> Od - Do
                        </label>
                        <label class="option option2 btn btn-default active">
                            <input type="radio" name="options" id="option2" autocomplete="off"> Tydzień
                        </label>
                        <label class="option option3 btn btn-default">
                            <input type="radio" name="options" id="option3" autocomplete="off"> Zmiana
                        </label>
                    </div>
                </div>
            </div>
            <div class="formInlineGroup groupoption1 hidden">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz Datę Od</label>
                </div>
                <div class="formInlineRow">
                    @Html.TextBox("SelectedDateFrom", System.DateTime.Now.Date.AddHours(-18), "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @autocomplete = "off" })
                </div>
            </div>
            <div class="formInlineGroup groupoption1 hidden">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz Datę Do</label>
                </div>
                <div class="formInlineRow">
                    @Html.TextBox("SelectedDateTo", System.DateTime.Now.Date.AddHours(6), "{0:yyyy-MM-dd HH:mm}", new { @class = "form-control datetimepicker", @autocomplete = "off" })
                </div>
            </div>


            <div class="formInlineGroup groupoption3 hidden">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz Datę</label>
                </div>
                <div class="formInlineRow">
                    @Html.TextBox("SelectedDate", System.DateTime.Now, "{0:yyyy-MM-dd}", new { @class = "form-control datetimepicker2", @autocomplete = "off" })
                </div>
            </div>
            <div class="formInlineGroup groupoption3 hidden">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz Zmianę</label>
                </div>
                <div class="formInlineRow">
                    @Html.DropDownList("SelectedShift", EnumHelper.GetSelectList(typeof(Shift)), null, new { @class = "form-control", @value = 1 })
                </div>
            </div>
            <div class="formInlineGroup groupoption2 ">
                <div class="formInlineRow">
                    <label class="control-label">Wybierz tydzień</label>
                </div>
                <div class="formInlineRow">
                    <div class="align-items-center" id="example1"></div>
                </div>
            </div>

            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label class="control-label">Nr seryjny</label>
                </div>
                <div class="formInlineRow">
                    <input type="text" class="form-control" id="serialNo" placeholder="Nr Seryjny" />
                </div>
            </div>

            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label class="control-label">Kod Artykułu</label>
                </div>
                <div class="formInlineRow">
                    <input type="text" class="form-control" id="itemCode" placeholder="Kod Artykułu" />
                </div>
            </div>

            <div class="formInlineGroup">
                <div class="formInlineRow">
                    <label class="control-label">Nr Zamowienia</label>
                </div>
                <div class="formInlineRow">
                    <input type="text" class="form-control" id="workOrder" placeholder="Nr zamówienia" />
                </div>
            </div>

            <div class="formInlineGroup">
                <div class="formInlineRow">
                </div>
                <div class="formInlineRow">
                    <input type="button" class="btn btn-success" value="Start" id="btnRefresh" />
                </div>
            </div>


            <div class="formInlineGroup" style="        margin-left: 15px;
">
                <div class="formInlineRow">
                </div>
                <div class="formInlineRow">
                    <div id="btnShare" class="btn btn-default" style="font-weight:100 !important;">
                        <i class="fas fa-share-alt"></i>
                    </div>
                </div>
            </div>


            <div style="clear: both;"></div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-lg-12" style="width: 800px;">
        <div id="TraceabilityGrid"></div>
    </div>
</div>

@section Scripts{
    <link href="~/Content/Treant/Treant.css" rel="stylesheet" />
    <link href="~/Content/Treant/perfect-scrollbar.css" rel="stylesheet" />
    <link href="~/Content/Treant/custom-color-plus-scrollbar.css" rel="stylesheet" />
    <link href="~/Content/Treant/collapsable.css" rel="stylesheet" />

    <script src="~/Areas/ONEPROD/Views/MES/TraceabilityGrid.js"></script>
    <script src="~/_ClientAppJS/MyScripts.js"></script>
    <script src="~/_ClientAppJS/ExternalLibraries/Treant/raphael.js"></script>
    <script src="~/_ClientAppJS/ExternalLibraries/Treant/Treant.js"></script>
    <script src="~/Areas/ONEPROD/Views/MES/TraceabilityTreant.js"></script>
    <script src="~/_ClientAppJS/ExternalLibraries/Treant/perfect-scrollbar.js"></script>
    <script src="~/_ClientAppJS/ExternalLibraries/Treant/jquery.easing.js"></script>

    <script type="text/javascript">
        var weekPickerWidget = new WeekPicker("#example1", "weekPicker");
        var filters = { DateFrom: '2019-01-01 6:00', DateTo: '2019-01-01 14:00', MachineId: 0, ItemCode: '', SerialNumber: '', WorkOrder: '' };
        var traceabilityGrid = new TraceabilityGrid("#TraceabilityGrid");
        $(document).ready(function () {

            InitDatepickers();
            weekPickerWidget.Init();

            traceabilityGrid.InitGrid();
            traceabilityGrid.RefreshGrid();

            $("#btnRefresh").click(function () {
                RefreshBrowse();
                traceabilityGrid.RefreshGrid(filters);
            });

        });

        // Function for Treant Chart
        $(document).on("click", ".node", function () {
            var randNode = $(" .Treant .node ");
            randNode = randNode.data('treenode');
            var tree = randNode.getTree(randNode.id);
            var clickedNode = tree.nodeDB["db"].find(x => x.id == this.id);
            var isParent = $(this).find("a").length > 0 ? true : false;

            if (this.id == event.target.parentElement.id && !isParent) {
                var prodLogId = clickedNode.text.prodLogId;
                let jsTreantChilds = new JsonHelper().GetPostData("/ONEPROD/MES/GetChilds",
                    {
                        productionLogId: prodLogId,
                    });
                jsTreantChilds.done(function (data) {
                    data.forEach(function (item) {
                        tree.addNode(clickedNode, item);
                    });
                });
                jsTreantChilds.fail(function (e) {
                    console.log(e);
                });
            }
        });
        // Functions for Filterind data productionlog
        $("#modeSwitcher").on("click", ".btn", function () {
            var Id = $(this).find("input")[0].id;
            ShowOptionGroup(Id);
        });

        function ShowOptionGroup(Id) {
            var options = ["option1", "option2", "option3"];

            for (i = 0; i < options.length; i++) {
                $(".group" + options[i]).addClass("hidden");
            }
            for (i = 0; i < options.length; i++) {
                if (options[i] == Id) {
                    $(".group" + options[i]).removeClass("hidden");
                }
            }
        };
        function RefreshBrowse() {
            $("#contentBox").html(ShowLoadingSnippet());
            ReadFilters();

        }
        function ReadFilters(startDay) {
            console.log("ReadFilters");
            var option = $("#modeSwitcher").find(".btn.active").find("input").attr("id");

            filters.MachineIds = $("#MachineId").val();
            filters.ItemCode = $("#itemCode").val();
            filters.SerialNumber = $("#serialNo").val();
            filters.WorkOrder = $("#workOrder").val();


            if (option == "option2") {
                console.log("option2 - week picker");
                if (startDay == null) {
                    //parameter coming from resourceGroup model. e.g: press liness has start day Saturday
                    if ($("#MachineId")[0].selectedOptions.length > 0) {
                        startDay = $("#MachineId")[0].selectedOptions[0].attributes["data-startDay"].value;
                    } else {
                        startDay = "1";
                        filters.MachineIds = [0];
                    }
                }
                
                var startDayShift = (8 - startDay >= 7) ? 0 : 8 - startDay;
                var dateFrom = weekPickerWidget.getWeekStartDate().subtract(startDayShift, "days");
                var dateTo = weekPickerWidget.getWeekEndDate().subtract(startDayShift, "days");
                var dateShiftEnd = CalcEndShiftTime();

                //dateTo = (dateTo > dateShiftEnd) ? dateShiftEnd : dateTo;
                filters.DateFrom = dateFrom.format('YYYY-MM-DD HH:mm');
                filters.DateTo = dateTo.format('YYYY-MM-DD HH:mm');
            }
            else if (option == "option1") {
                console.log("option1 - date picker");
                filters.DateFrom = $("#SelectedDateFrom").val();
                filters.DateTo = $("#SelectedDateTo").val()
            }
            else {
                console.log("option3 - shift picker");
                var whp = new WorkingHoursPreview("#SelectedDate", "#SelectedShift");
                var hours = whp.CalculateStartAndEndDate();
                filters.DateFrom = hours.dateFrom;
                filters.DateTo = hours.dateTo;
            }

            console.log(filters);
        };
        function CalcEndShiftTime() {
            var today = new Date();
            var hour = today.getHours();
            today.setHours(hour + 2);
            hour = today.getHours();
            var shiftEndHour = hour < 8 ? 6 : hour < 16 ? 14 : 22;

            today.setSeconds(0); today.setMinutes(0); today.setMilliseconds(0);
            today.setHours(shiftEndHour - 8);
            return new moment(today);
        };

        $(".datetimepicker2").datetimepicker({
            i18n: {
                pl: {
                    months: [
                        'Styczeń', 'Luty', 'Marzec', 'Kwiecień',
                        'Maj', 'Czerwiec', 'Lipiec', 'Sierpień',
                        'Wrzesień', 'Październik', 'Listopad', 'Grudzień',
                    ],
                    dayOfWeek: [
                        "Nd", "Pn", "Wt", "Śr", "Cz",
                        "Pt", "Sb",
                    ]
                }
            },
            dayOfWeekStart: 1,
            timepicker: false,
            allowTimes: ['06:00', '14:00', '22:00'],
            format: 'Y-m-d',
        });
        $(".datetimepicker").datetimepicker({
            allowTimes: ['00:00', '06:00', '14:00', '22:00']
        });

    </script>
}